简介：
IL2CPP 是 Unity 开发的脚本后端，在为某些平台构建项目时，您可以将其用作 Mono 的
替代方案。当您选择使用 IL2CPP 构建项目时， Unity 会将 IL 代码（有时称为 CIL - 中间语言
或通用中间语言）从脚本和程序集转换为 C ++代码，然后再创建本机二进制文件（.exe，
apk， .xap， for 例子）为您选择的平台。 IL2CPP 的一些用途包括提高 Unity 项目的性能，安全
性和平台兼容性。
IL2CPP 如何工作
在使用 IL2CPP 开始构建时， Unity 会自动执行以下步骤：
1、 Unity Scripting API 代码编译为常规.NET DLL（托管程序集）。
2、 所有不属于脚本的托管程序集（如插件和基类库）都由名为 Unused Bytecode Stripper 的
Unity 工具处理，该工具查找所有未使用的类和方法，并将它们从这些 DLL 中删除（动态链
接库）。此步骤显着减少了构建游戏的大小。
3、 然后将所有托管程序集转换为标准 C ++代码。
4、 使用本机平台编译器编译生成的 C ++代码和 IL2CPP 的运行时部分。
5、 最后，代码链接到可执行文件或 DLL，具体取决于您所针对的平台。

优化 IL2CPP 构建时间
使用 IL2CPP 构建项目时，项目构建时间可能会更长。但是，有几种方法可以显着缩短
构建时间：
1、 使用增量构建：
使用增量构建时， C ++编译器仅重新编译自上次构建以来已更改的文件。要使用增量构
建，请将项目构建到以前的构建位置（不删除目标目录）。2、 从反恶意软件扫描中排除项目和目标构建文件夹
您可以在构建项目之前禁用反恶意软件，从而缩短构建时间。（Unity Technologies 测试
发现，在新的 Windows 10 安装上禁用 Windows Defender 后，构建时间减少了 50-66％。）
3、 将项目和目标构建文件夹存储在固态驱动器（SSD）上
与传统硬盘驱动器（HDD）相比，固态硬盘（SSD）具有更快的读/写速度。将 IL 代码转
换为 C ++并对其进行编译涉及大量的读/写操作。更快的存储设备可加快此过程。
注 - IL2CPP 仅在构建以下平台时可用：
Android、 AppleTV、 iOS、 任天堂 3DS、 Nintendo Switch、 Playstation 4、 Playstation Vita、 通用
Windows 平台、 WebGL、 Xbox One
* IL2CPP 是构建 iOS 和 WebGL 时唯一可用的脚本后端
